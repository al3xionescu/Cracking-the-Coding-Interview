/*
Write code to partition a linked list around a value x, such that all nodes less than x come before all nodes greater than or equal to
x. If x is contained within the list, the values of x only need to be after the elements less than x. The partition element x can 
appear anywhere in the "right partition"; it does not need to appear between the left and right partitions. 
*/

LinkedListNode partition(LinkedListNode node, int x){
   LinkedListNode beforeStart = null;
   LinkedListNode beforeEnd = null;
   LinkedListNode afterStart = null;
   LinkedListNode afterEnd = null;
   while(node!=null){
      LinkedListNode next = node.next;
      node.next = null;
      if(node.data<x){
         if(beforeStart == null) {
         beforeStart = node;
         beforeEnd = beforeStart;
         }
         else{
         beforeEnd.next = node;
         beforeEnd = node;
         }
      }
      else{
         if(afterStart == null){
            afterStart = node;
            afterEnd = afterStart;
         }
         else{
            afterEnd.next = node;
            afterEnd = node;
         }
      }
      node = next;
   }
   if (beforeStart == null){
      return afterStart;
   }
   beforeEnd.next = afterStart;
   return beforeStart;
}
